{
	"info": {
		"_postman_id": "3239c017-ed70-498e-a1a9-fc189d108312",
		"name": "Filters",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Filters API Methods",
			"item": [
				{
					"name": "filters.json - List  the filters",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// pm.test(\"Check Status\", function () {\r",
									" //      pm.expect(pm.response.code).to.be.oneof([200,201,400,500]);\r",
									"//    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response must be valid\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.withBody;\r",
									"});\r",
									"/// Varible\r",
									"  var jsonData = pm.response.json();\r",
									"pm.test(\"Check  position\", function () {\r",
									"   pm.expect(jsonData[0].Content).to.equal(\"Inbox\");\r",
									"   pm.expect(jsonData[1].Content).to.equal(\"Today\");\r",
									"   pm.expect(jsonData[2].Content).to.equal(\"Next\");\r",
									"   pm.expect(jsonData[3].Content).to.equal(\"Recycle Bin\");\r",
									"});\r",
									"pm.test(\"Check  the Id \", function () {\r",
									"   pm.expect(jsonData[0].Id).to.equal(0);\r",
									"   pm.expect(jsonData[1].Id).to.equal(-1);\r",
									"   pm.expect(jsonData[2].Id).to.equal(-5);\r",
									"   pm.expect(jsonData[3].Id).to.equal(-3);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Check if first position  with id 0  is Inbox\", function () {\r",
									"   pm.expect(jsonData[0].Content).to.equal(\"Inbox\");\r",
									"   pm.expect(jsonData[0].Id).to.equal(0);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Check if Secont position  with id -1  is Today\", function () {\r",
									"   pm.expect(jsonData[1].Content).to.equal(\"Today\");\r",
									"   pm.expect(jsonData[1].Id).to.equal(-1);\r",
									"\r",
									"});\r",
									"pm.test(\"Check if third position  with id -5  is Next\", function () {\r",
									"   pm.expect(jsonData[2].Content).to.equal(\"Next\");\r",
									"   pm.expect(jsonData[2].Id).to.equal(-5);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Check if Fourth position  with id -3  is Recycle Bin\", function () {\r",
									"   pm.expect(jsonData[3].Content).to.equal(\"Recycle Bin\");\r",
									"   pm.expect(jsonData[3].Id).to.equal(-3);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "kad021@email.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "kad123",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}filters.json",
							"host": [
								"{{url}}filters",
								"json"
							]
						}
					},
					"response": []
				},
				{
					"name": "filters/ID.json - Filters by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response must be valid\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.withBody;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Check if Id 0 is equal Inbox\", function () {\r",
									"   pm.expect(jsonData.Content).to.equal(\"Inbox\");\r",
									"   pm.expect(jsonData.Id).to.equal(0);\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "kad021@email.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "kad123",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}filters/0.json",
							"host": [
								"{{url}}filters"
							],
							"path": [
								"0.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "filters/ID/items.json",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"Id\", 10903798);\r",
									"pm.environment.set(\"Content\", \"new item8\");\r",
									"pm.environment.set(\"Item\", 1);\r",
									"pm.environment.set(\"Order\", 1);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response must be valid\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.withBody;\r",
									"});\r",
									"  var jsonData = pm.response.json();\r",
									"pm.test(\"Check   items  of Inbox\", function () {\r",
									"   pm.expect(jsonData[0].ItemOrder).to.equal(1);\r",
									" //  pm.expect(jsonData[1].ItemOrder).to.equal(2);\r",
									"\r",
									"  // pm.expect(jsonData[0].ItemType).to.equal(\"Item\");\r",
									" //  pm.expect(jsonData[0].ItemOrder).to.equal(\"Order\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kad123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kad021@email.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}filters/0/items.json",
							"host": [
								"{{url}}filters"
							],
							"path": [
								"0",
								"items.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "filters/ID/doneitems.json",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response must be valid\", function () {\r",
									"    pm.response.to.be.json;\r",
									" \r",
									"});\r",
									"  var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Check   Done Items\", function () {\r",
									"   pm.expect(jsonData[0].OwnerId).to.equal(688892);\r",
									"\r",
									"});\r",
									"pm.test(\"Check   Done Items\", function () {\r",
									"   pm.expect(jsonData[0].ItemType).to.equal(3);\r",
									"   pm.expect(jsonData[0].ItemType).to.be.a(\"number\");\r",
									"\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kad123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kad021@email.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}filters/0/doneitems.json",
							"host": [
								"{{url}}filters"
							],
							"path": [
								"0",
								"doneitems.json"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}