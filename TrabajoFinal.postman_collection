{
	"info": {
		"_postman_id": "171cdaee-2959-4a20-baf3-d66df8478815",
		"name": "Digital Harbor",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create_User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var test = () =>{\r",
									"    \r",
									"    pm.test(\"Response time is less than 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"    });\r",
									"\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"\r",
									"    pm.test(\"No hay mensajes de error\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"ErrorMessage\");\r",
									"    });\r",
									"}\r",
									"\r",
									"pm.environment.set(\"tests\", test.toString());\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"eval(pm.environment.get(\"tests\"))();\r",
									"\r",
									"\r",
									"pm.environment.set(\"email\", jsonData.Email);\r",
									"pm.environment.set(\"fullName\", jsonData.FullName);\r",
									"pm.environment.set(\"id\", jsonData.Id);\r",
									"\r",
									"\r",
									"pm.test(\"Probar el tipo de datos\", function () {\r",
									"    pm.expect(jsonData.Email).to.be.a('string');\r",
									"    pm.expect(jsonData.Id).to.be.a('number');\r",
									"    pm.expect(jsonData.FullName).to.be.a('string');\r",
									"})\r",
									"\r",
									"pm.test(\"Probar envio de campos vacios\", function () {\r",
									"    pm.expect(jsonData.Email).to.not.be.empty;\r",
									"    pm.expect(jsonData.Id).to.not.null;\r",
									"    pm.expect(jsonData.FullName).to.not.be.empty;\r",
									"})\r",
									"\r",
									"pm.test(\"campo\", function(){\r",
									"    pm.expect(jsonData.FullName).to.have.lengthOf.within(2,9);\r",
									"})\r",
									"\r",
									"pm.test(\"El ususario ya existe\", function(){\r",
									"    pm.expect(jsonData.ErrorMessage).to.not.be.equal(\"Account with this email address already exists\");\r",
									"\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Email\": \"denis@gmail.com\",\r\n   \"FullName\": \"Joe Blue\",\r\n   \"Password\": {{pass}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"user.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"eval(pm.environment.get(\"tests\"))();\r",
									"\r",
									"pm.test(\"Probar el tipo de datos\",function(){    \r",
									"    pm.expect(jsonData.Id).to.be.a('number');\r",
									"    pm.expect(jsonData.Password).to.be.a('null');\r",
									"    pm.expect(jsonData.FullName).to.be.a('string');\r",
									"})\r",
									"\r",
									"pm.test(\"Persistencia de datos\", function(){\r",
									"    pm.expect(jsonData.Id).to.eql(pm.environment.get(\"id\"));\r",
									"    pm.expect(jsonData.Email).to.eql(pm.environment.get(\"email\"));\r",
									"    pm.expect(jsonData.FullName).to.eql(pm.environment.get(\"fullName\"));    \r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Denis12@",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{email}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"user.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"eval(pm.environment.get(\"tests\"))();\r",
									"pm.environment.unset(\"email\");\r",
									"pm.environment.set(\"email\", jsonData.Email);\r",
									"\r",
									"pm.test(\"Usuario nombre del usuario editado\", function () {\r",
									"    pm.expect(jsonData.FullName).to.eql(pm.environment.get(\"fullName\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{email}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "Denis12@",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"Email\": \"denis789@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/0.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"0.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"eval(pm.environment.get(\"tests\"))();\r",
									"\r",
									"\r",
									"pm.test(\"Elemento eliminado\", function(){\r",
									"    pm.expect(jsonData.Id).to.eql(pm.environment.get(\"id\"));\r",
									"    pm.expect(jsonData.Email).to.eql(pm.environment.get(\"email\"));\r",
									"    pm.expect(jsonData.FullName).to.eql(pm.environment.get(\"fullName\"));    \r",
									"})\r",
									"\r",
									"//pm.environment.unset(\"email\");\r",
									"//pm.environment.unset(\"fullName\");\r",
									"//pm.environment.unset(\"id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{email}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "Denis12@",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/user/0.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"0.json"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AutenticationAPImethods",
			"item": [
				{
					"name": "IsAutenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"eval(pm.environment.get(\"tests\"))();\r",
									"\r",
									"\r",
									"pm.test(\"Respuesta es true\", function () { \r",
									"    pm.expect(jsonData).to.eql(true);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "denis1@gmail.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "Denis12@",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/authentication/isauthenticated.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"authentication",
								"isauthenticated.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"tests\"))();\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"El token pertenece al usuario\", function () {    \r",
									"    pm.expect(jsonData.UserEmail).to.eql(\"denis1@gmail.com\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "denis1@gmail.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "Denis12@",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/authentication/token.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"authentication",
								"token.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//eval(pm.environment.get(\"tests\"))();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "denis1@gmail.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "pASswoRd",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/authentication/token.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"authentication",
								"token.json"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "passdeprueba",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "denilson1921@hotmail.es",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://todo.ly/api/authentication/token.xml",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "client_credentials",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "Inicio",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": false,
						"type": "boolean"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Proyect",
			"item": [
				{
					"name": "Get_AllProyects",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "passdeprueba",
									"type": "string"
								},
								{
									"key": "username",
									"value": "denilson1921@hotmail.es",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/projects.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"projects.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateNewProyect",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "pASswoRd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "userprueba@email.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Id\": \"2021\",\r\n   \"Content\": \"My proyect mine\",\r\n   \"ItemsCount\": \"10\",\r\n   \"Icon\": \"4\",\r\n   \"ItemType\": \"2\",\r\n   \"ParentId\": \"0\",\r\n   \"Collapsed\": \"false\",\r\n   \"ItemOrder\": \"0\",\r\n   \"Children\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/projects.json",
							"host": [
								"{{host}}"
							],
							"path": [
								"projects.json"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": ""
		}
	]
}